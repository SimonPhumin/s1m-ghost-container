---
name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main, dev]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Setup python3
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install test dependencies
        run: pip3 install yamllint ansible ansible-lint

      - name: Install ansible podman container collection
        run: ansible-galaxy collection install containers.podman

      - name: Lint code
        run: |
          yamllint --no-warnings .
          ansible-lint

  test:
    needs: [lint]
    name: test
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Install test dependencies
        run: |
          sudo pip3 install --upgrade pip
          sudo pip3 install ansible

      - name: Check playbook syntax
        run: ansible-playbook main.yml --syntax-check

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.12.1'

  #     - name: Install Ansible and Docker modules
  #       run: |
  #         pip install ansible
  #         ansible-galaxy collection install community.docker

  #     - name: Create inventory from secret
  #       run: echo "${{ secrets.HOST }}" > inventory

  #     - name: Setup SSH Key
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/key.pem
  #         chmod 600 ~/.ssh/key.pem
  #         ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
  #         echo "Host *\n IdentityFile ~/.ssh/key.pem" > ~/.ssh/config

  #     - name: Run Ansible Playbook
  #       run: ansible-playbook -vvv -i inventory ./path/to/my/playbook.yml --private-key ~/.ssh/key.pem -u ubuntu
  #       env:
  #         IMAGE: ghcr.io/{org-name}/{repo-name}/{app-name}:${{ github.sha }}
  #         HOST: ${{ secrets.HOST }}
  #         GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
  #         GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  #         REPOSITORY_NAME: ghcr.io/{org-name}/{repo-name}/{app-name}
